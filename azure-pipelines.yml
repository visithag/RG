trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: IAC

stages:
  - stage: TerraformPlan
    displayName: "Terraform Plan"
    jobs:
      - job: TerraformPlan
        displayName: "Terraform Plan"
        steps:
          - checkout: self

          - script: |
              sudo apt-get update
              sudo apt-get install -y unzip wget
            displayName: "Install unzip wget"

          - script: |
              echo "Downloading Terraform v$(terraformVersion)..."
              wget https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_${{ variables.terraformVersion }}_linux_amd64.zip
              unzip terraform_${{ variables.terraformVersion }}_linux_amd64.zip
              sudo mv terraform /usr/local/bin/
              terraform -version
            displayName: "Install Terraform CLI"

          - script: |
              terraform init \
                -backend-config="resource_group_name=$(backend_resource_group_name)" \
                -backend-config="storage_account_name=$(backend_storage_account_name)" \
                -backend-config="container_name=$(backend_container_name)" \
                -backend-config="key=$(backend_key)"
            displayName: "Terraform Init"
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)

          - script: |
              terraform plan -out=tfplan
            displayName: "Terraform Plan"
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)

          - publish: tfplan
            artifact: tfplan
          
          # Add this step to commit the lock file
          - script: |
              git add .terraform.lock.hcl
              git commit -m "Add Terraform lock file"
              git push origin main
            displayName: "Commit and Push Lock File"

  - stage: TerraformApply
    displayName: "Terraform Apply"
    dependsOn: TerraformPlan
    jobs:
      - job: TerraformApply
        displayName: "Terraform Apply"
        steps:
          # 1. Checkout Repository (Important: Ensures .terraform.lock.hcl is available)
          - checkout: self

          # 2. Download tfplan artifact
          - download: current
            artifact: tfplan

          # 3. Move tfplan to working directory
          - script: |
              cp $(Pipeline.Workspace)/tfplan/tfplan ./tfplan
            displayName: "Copy tfplan to working directory"

          # 4. Install unzip and wget
          - script: |
              sudo apt-get update
              sudo apt-get install -y unzip wget
            displayName: "Install unzip wget"

          # 5. Install Terraform
          - script: |
              echo "Downloading Terraform v$(terraformVersion)..."
              wget https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_${{ variables.terraformVersion }}_linux_amd64.zip
              unzip terraform_${{ variables.terraformVersion }}_linux_amd64.zip
              sudo mv terraform /usr/local/bin/
              terraform -version
            displayName: "Install Terraform CLI"

          # 6. Terraform Apply
          - script: |
              terraform apply -auto-approve tfplan
            displayName: "Terraform Apply"
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
